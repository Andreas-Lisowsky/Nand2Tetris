// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A basic math library.
 */
class Math {

    static Array twoToThe;
    /** Initializes the library. */
    function void init() {
        
        var int j,val;
        
        let j = 1;
        let val = 1;
        let twoToThe = Array.new(16);
        let twoToThe[0] = val;
        
        while(j < 16) {
            
            let val = val + val;
            let twoToThe[j] = val;
            
            let j = j+1;
        }
        
        return;
    }
    
    function boolean bit(int x, int j) {
        
        if((x & twoToThe[j]) = twoToThe[j]) {
            
            return true;
        }
        else {
            
            return false;
        }
    }

    /** Returns the absolute value of x. */
    function int abs(int x) {
        
        if(x < 0) {
            
            return -x;
        }
        else {
            
            return x;
        }
    }

    /** Returns the product of x and y. */
    function int multiply(int x, int y) {
        
        var int sum,shiftedX,j;
        
        let sum = 0;
        let shiftedX = x;
        let j = 0;
       
        while(j < 16) {
        
            if(Math.bit(y,j)) {
                
                let sum = sum + shiftedX;
            }
            
            let shiftedX = shiftedX + shiftedX;
            let j = j+1;
        }  
        
        return sum;
    }

    /** Returns the integer part of x/y. */
    /*function int divide(int x, int y) {
        
        var int q,res;
        var boolean res_pos;
      
        let res_pos = ((x<0)=(y<0));
        let x = Math.abs(x);
        let y = Math.abs(y);
        
        if(y > x) {
            
            return = 0;
        }
        
        let q = Math.divide(x,y+y);
        
        if((x-((y+y)*q) < y)) {
            
            let res = q+q;
        }
        else {
            
            let res = q+q+1;
        }
        
        if(res_pos) {
            
            return res;
        }
        else {
            
            return -res;
        }
    }*/
    
     function int divide(int x, int y) {
        var int q,result;
        var boolean pos;

        let pos = ((x < 0) = (y < 0));

        let x = Math.abs(x);
        let y = Math.abs(y);

        if(y > x){
            return 0;
        }

        let q = Math.divide(x,y + y);
        
        if((x - (2 * q * y)) < y){
            let result = q + q;
        }else{
            let result = q + q + 1;
        }

        if(pos){
            return result;
        }else{
            return -result;
        }

    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
        
        var int j;
        var int k;
        var int y;
        
        let j = 7;
        let y = 0;
        
        while(j > -1) {
            
            let k = twoToThe[j];
            if(~(Math.multiply(y+k,y+k) > x) & (Math.multiply(y+k,y+k) > 0)) {
                
                let y  = y+k;         
            }
            
            let j = j - 1;
        }
        
        return y;
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
        
        if(a > b) {
            
            return a;
        }
        else {
            
            return b;
        }
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
        
        if(a < b) {
            
            return a;
        }
        else {
            
            return b;
        }
    }
}
